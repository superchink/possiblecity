{% extends "philadelphia/base.html" %}
{% block layout %}
<div class="page-content" style="position:relative; top:100px">
	<div id="map" style="height:600px; width: 100%">
    </div>
    <div id="map-status" class="status" style="display:none">
        Loading Map Features...
    </div>
</div>
{% endblock layout %}
{% block js_local %}
<script src="{{ STATIC_URL }}js/libs/lvector/lvector.js"></script>
<script src="{{ STATIC_URL }}js/libs/lvector/Custom.js"></script>
<script src="{{ STATIC_URL }}js/libs/leaflet-plugins/layer/tile/Bing.js"></script>
<script>
    // Initialize the map object
    var map = L.map('map');
    //, {
    //    maxZoom: 20,
    //    minZoom: 15
    //});
    
    // Prep the background tile layer
    var tileUrl = 'http://api.tiles.mapbox.com/v3/dmeehan.map-sued82zn/{z}/{x}/{y}.png';
    var tileAttribution = '';
    
    L.tileLayer(tileUrl, {
       attribution: tileAttribution,
    }).addTo(map);

    //var satellite = new L.BingLayer("Anqm0F_JjIZvT0P3abS6KONpaBaKuTnITRrnYuiJCE0WOhH6ZbE4DzeT6brvKVR5");
    
    // Locate and set center
    var philadelphia = new L.LatLng(39.9522, -75.1642);
    var southWest = new L.LatLng(39.87, -75.28);
    var northEast = new L.LatLng(40.14, -74.96);
    var phlBounds = new L.LatLngBounds(southWest, northEast);

    map.locate();

    map.setView(philadelphia, 16);
    
    var lotLayer = new lvector.Custom({
            url: "{% url 'api_lots_vacant' %}",
            scaleRange: [16, 21],
            showAll: false,
            singlePopup: true,
            popupTemplate: function(properties) {
                url = '{% url "lot_detail" 0 %}'.replace (0, properties.id);                
                html = '<h3>' + properties.address +'</h3>' +
	                   '<p>' + properties.is_public + '</p>' +
	                   '<p><a href="' + url +'" class="button">View</a></p>';
	            return html;
            },
            symbology: {
                type: "single",
                vectorOptions: {
                    fillColor: "#eb8db00",
                    fillOpacity: 0.2,
                    strokeWeight: 2,
                    strokeColor: "#eb8db00",
                    strokeOpacity: 1
                }
            },
            symbology: {
                type: "unique",
                property: "is_public",
                values: [
                    {
                        value: "true",
                        vectorOptions: {
                             fillColor: "#eb8db00",
                             fillOpacity: 0.2,
                             strokeWeight: 2,
                             strokeColor: "#eb8db00",
                            strokeOpacity: 1
                        }
                    },
                    {
                        value: "false",
                        vectorOptions: {
                             fillColor: "#eb8db00",
                             fillOpacity: 0.2,
                             strokeWeight: 2,
                             strokeColor: "#eb8db00",
                             strokeOpacity: 1,
                             dasharray: "4,2"
                        }
                    }
                 ]
            }              
    });
    
    function onLocationFound(e) {
        if (phlBounds.contains(e.latlng)) {
           center = e.latlng
        } else {
           center = philadelphia
        }
        map.setView(center, 17);
        L.marker(center).addTo(map);
        lotLayer.setMap(map);
    }


    //function onZoomend(){
    //   if (map.getZoom()>=17) {
    //       map.removeLayer(streets);
    //       map.addLayer(satellite);
    //   };

    //   if(map.getZoom()<17){
    //       map.removeLayer(satellite);
    //       map.addLayer(streets);
    //   };

       function onLocationError(e) {
           alert(e.message);
       }

    map.on('locationfound', onLocationFound);
    //map.on('zoomend', onZoomend);
    map.on('locationerror', onLocationError); 


</script>
{% endblock js_local %}
