3.2.1 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@options{ :@children[o:Sass::Tree::ImportNode
;i;0:@imported_filename"shared;	@;
[ o:Sass::Tree::CommentNode
;i:
@type:silent;	@:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;
[ o:Sass::Tree::VariableNode;i:@guarded"!default:
@expro:Sass::Script::String	;i;:identifier;	@;"all:
@name" default-transition-property;	@;
[ o;;i;"!default;o:Sass::Script::Number;i:@numerator_units["s:@original"1s;	@;i:@denominator_units[ ;" default-transition-duration;	@;
[ o;;i;"!default;o:Sass::Script::Bool;i;	@;F;" default-transition-function;	@;
[ o;;i;"!default;o;;i;	@;F;"default-transition-delay;	@;
[ o;;i;"!default;o:Sass::Script::List	;i:@separator:
comma;	@;[o;	;i;;;	@;"transformo;	;i;;;	@;"transform-origin;"#transitionable-prefixed-values;	@;
[ o;
;i!;;;	@;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;
[ o:Sass::Tree::MixinDefNode;i0;"transition-property;T;	@;
[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operator:eq:
@linei1:@operand2o:Sass::Script::String	;i1:
@type:identifier:@options{ :@value"string:@operand1o:Sass::Script::Funcall;i1:@keywords{ :
@name"type-of;@:@splat0:
@args[o:Sass::Script::Variable	;i1:@underscored_name"property_1;"property-1;@;@0[o:Sass::Tree::VariableNode;i1:@guarded0:
@expro;;i1;{ ;"unquote;@;0;[o;	;i1;"property_1;"property-1;@;"property-1;@:@children[ o;;i2;0;o:Sass::Script::Funcall;i2:@keywords{ ;"compact;	@:@splat0:
@args[o:Sass::Script::Variable	;i2:@underscored_name"property_1;"property-1;	@o;%	;i2;&"property_2;"property-2;	@o;%	;i2;&"property_3;"property-3;	@o;%	;i2;&"property_4;"property-4;	@o;%	;i2;&"property_5;"property-5;	@o;%	;i2;&"property_6;"property-6;	@o;%	;i2;&"property_7;"property-7;	@o;%	;i2;&"property_8;"property-8;	@o;%	;i2;&"property_9;"property-9;	@o;%	;i2;&"property_10;"property-10;	@;"properties;	@;
[ u; Å[o:Sass::Script::Variable	:
@linei3:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:@prop_syntax:new;i3;[" -webkit-transition-property;	@	:@valueo:Sass::Script::Funcall;i3:@keywords{ ;"prefixed-for-transition;	@	:@splat0:
@args[o:Sass::Script::String	;i3:
@type:identifier;	@	;"-webkito; 	;i3;"properties;"properties;	@	:
@tabsi :@children[ u; Á[o:Sass::Script::Variable	:
@linei4:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:@prop_syntax:new;i4;["-moz-transition-property;	@	:@valueo:Sass::Script::Funcall;i4:@keywords{ ;"prefixed-for-transition;	@	:@splat0:
@args[o:Sass::Script::String	;i4:
@type:identifier;	@	;"	-mozo; 	;i4;"properties;"properties;	@	:
@tabsi :@children[ u; ¹[o:Sass::Script::Variable	:
@linei5:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:@prop_syntax:new;i5;["-o-transition-property;	@	:@valueo:Sass::Script::Funcall;i5:@keywords{ ;"prefixed-for-transition;	@	:@splat0:
@args[o:Sass::Script::String	;i5:
@type:identifier;	@	;"-oo; 	;i5;"properties;"properties;	@	:
@tabsi :@children[ o:Sass::Tree::PropNode:@prop_syntax:new;i6;["transition-property;	@;o;%	;i6;&"properties;"properties;	@:
@tabsi ;
[ ;#0;$[[o;%;&"property_1;"property-1;	@o;%	;i&;&" default_transition_property;" default-transition-property;	@[o;%;&"property_2;"property-2;	@o;;i';	@;F[o;%;&"property_3;"property-3;	@o;;i(;	@;F[o;%;&"property_4;"property-4;	@o;;i);	@;F[o;%;&"property_5;"property-5;	@o;;i*;	@;F[o;%;&"property_6;"property-6;	@o;;i+;	@;F[o;%;&"property_7;"property-7;	@o;;i,;	@;F[o;%;&"property_8;"property-8;	@o;;i-;	@;F[o;%;&"property_9;"property-9;	@o;;i.;	@;F[o;%;&"property_10;"property-10;	@o;;i/;	@;Fo;
;i9;;;	@;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;
[ o;;iH;"transition-duration;T;	@;
[u; Ù[o:Sass::Script::Operation
:@operator:eq:
@lineiI:@operand2o:Sass::Script::String	;iI:
@type:identifier:@options{ :@value"string:@operand1o:Sass::Script::Funcall;iI:@keywords{ :
@name"type-of;@:@splat0:
@args[o:Sass::Script::Variable	;iI:@underscored_name"duration_1;"duration-1;@;@0[o:Sass::Tree::VariableNode;iI:@guarded0:
@expro;;iI;{ ;"unquote;@;0;[o;	;iI;"duration_1;"duration-1;@;"duration-1;@:@children[ o;;iJ;0;o;!;iJ;"{ ;"compact;	@;#0;$[o;%	;iJ;&"duration_1;"duration-1;	@o;%	;iJ;&"duration_2;"duration-2;	@o;%	;iJ;&"duration_3;"duration-3;	@o;%	;iJ;&"duration_4;"duration-4;	@o;%	;iJ;&"duration_5;"duration-5;	@o;%	;iJ;&"duration_6;"duration-6;	@o;%	;iJ;&"duration_7;"duration-7;	@o;%	;iJ;&"duration_8;"duration-8;	@o;%	;iJ;&"duration_9;"duration-9;	@o;%	;iJ;&"duration_10;"duration-10;	@;"durations;	@;
[ o:Sass::Tree::MixinNode;iM;"{ ;"experimental;	@;
[ ;#0;$[o;	;iK;;;	@;"transition-durationo;%	;iK;&"durations;"durations;	@o;	;iL;;;	@;"	-mozo;	;iL;;;	@;"-webkito;	;iL;;;	@;"-oo:!Sass::Script::UnaryOperation	:@operator:not;iL;	@:@operando;	;iL;;;	@;"-mso;,	;-;.;iL;	@;/o;	;iL;;;	@;"-khtmlo;	;iL;;;	@;"official;#0;$[[o;%;&"duration_1;"duration-1;	@o;%	;i>;&" default_transition_duration;" default-transition-duration;	@[o;%;&"duration_2;"duration-2;	@o;;i?;	@;F[o;%;&"duration_3;"duration-3;	@o;;i@;	@;F[o;%;&"duration_4;"duration-4;	@o;;iA;	@;F[o;%;&"duration_5;"duration-5;	@o;;iB;	@;F[o;%;&"duration_6;"duration-6;	@o;;iC;	@;F[o;%;&"duration_7;"duration-7;	@o;;iD;	@;F[o;%;&"duration_8;"duration-8;	@o;;iE;	@;F[o;%;&"duration_9;"duration-9;	@o;;iF;	@;F[o;%;&"duration_10;"duration-10;	@o;;iG;	@;Fo;
;iP;;;	@;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;
[ o;;i`;"transition-timing-function;T;	@;
[o;;ia;0;o;!;ia;"{ ;"unquote;	@;#0;$[o;%	;ia;&"function_1;"function-1;	@;"function-1;	@;
[ o;;ib;0;o;!;ib;"{ ;"compact;	@;#0;$[o;%	;ib;&"function_1;"function-1;	@o;%	;ib;&"function_2;"function-2;	@o;%	;ib;&"function_3;"function-3;	@o;%	;ib;&"function_4;"function-4;	@o;%	;ib;&"function_5;"function-5;	@o;%	;ib;&"function_6;"function-6;	@o;%	;ib;&"function_7;"function-7;	@o;%	;ib;&"function_8;"function-8;	@o;%	;ib;&"function_9;"function-9;	@o;%	;ib;&"function_10;"function-10;	@;"functions;	@;
[ o;+;ie;"{ ;"experimental;	@;
[ ;#0;$[o;	;ic;;;	@;"transition-timing-functiono;%	;ic;&"functions;"functions;	@o;	;id;;;	@;"	-mozo;	;id;;;	@;"-webkito;	;id;;;	@;"-oo;,	;-;.;id;	@;/o;	;id;;;	@;"-mso;,	;-;.;id;	@;/o;	;id;;;	@;"-khtmlo;	;id;;;	@;"official;#0;$[[o;%;&"function_1;"function-1;	@o;%	;iV;&" default_transition_function;" default-transition-function;	@[o;%;&"function_2;"function-2;	@o;;iW;	@;F[o;%;&"function_3;"function-3;	@o;;iX;	@;F[o;%;&"function_4;"function-4;	@o;;iY;	@;F[o;%;&"function_5;"function-5;	@o;;iZ;	@;F[o;%;&"function_6;"function-6;	@o;;i[;	@;F[o;%;&"function_7;"function-7;	@o;;i\;	@;F[o;%;&"function_8;"function-8;	@o;;i];	@;F[o;%;&"function_9;"function-9;	@o;;i^;	@;F[o;%;&"function_10;"function-10;	@o;;i_;	@;Fo;
;ih;;;	@;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;
[ o;;iw;"transition-delay;T;	@;
[u; Ê[o:Sass::Script::Operation
:@operator:eq:
@lineix:@operand2o:Sass::Script::String	;ix:
@type:identifier:@options{ :@value"string:@operand1o:Sass::Script::Funcall;ix:@keywords{ :
@name"type-of;@:@splat0:
@args[o:Sass::Script::Variable	;ix:@underscored_name"delay_1;"delay-1;@;@0[o:Sass::Tree::VariableNode;ix:@guarded0:
@expro;;ix;{ ;"unquote;@;0;[o;	;ix;"delay_1;"delay-1;@;"delay-1;@:@children[ o;;iy;0;o;!;iy;"{ ;"compact;	@;#0;$[o;%	;iy;&"delay_1;"delay-1;	@o;%	;iy;&"delay_2;"delay-2;	@o;%	;iy;&"delay_3;"delay-3;	@o;%	;iy;&"delay_4;"delay-4;	@o;%	;iy;&"delay_5;"delay-5;	@o;%	;iy;&"delay_6;"delay-6;	@o;%	;iy;&"delay_7;"delay-7;	@o;%	;iy;&"delay_8;"delay-8;	@o;%	;iy;&"delay_9;"delay-9;	@o;%	;iy;&"delay_10;"delay-10;	@;"delays;	@;
[ o;+;i|;"{ ;"experimental;	@;
[ ;#0;$[o;	;iz;;;	@;"transition-delayo;%	;iz;&"delays;"delays;	@o;	;i{;;;	@;"	-mozo;	;i{;;;	@;"-webkito;	;i{;;;	@;"-oo;,	;-;.;i{;	@;/o;	;i{;;;	@;"-mso;,	;-;.;i{;	@;/o;	;i{;;;	@;"-khtmlo;	;i{;;;	@;"official;#0;$[[o;%;&"delay_1;"delay-1;	@o;%	;im;&"default_transition_delay;"default-transition-delay;	@[o;%;&"delay_2;"delay-2;	@o;;in;	@;F[o;%;&"delay_3;"delay-3;	@o;;io;	@;F[o;%;&"delay_4;"delay-4;	@o;;ip;	@;F[o;%;&"delay_5;"delay-5;	@o;;iq;	@;F[o;%;&"delay_6;"delay-6;	@o;;ir;	@;F[o;%;&"delay_7;"delay-7;	@o;;is;	@;F[o;%;&"delay_8;"delay-8;	@o;;it;	@;F[o;%;&"delay_9;"delay-9;	@o;;iu;	@;F[o;%;&"delay_10;"delay-10;	@o;;iv;	@;Fo;
;i;;;	@;["*/* Transition all-in-one shorthand */;
[ o;;i;"single-transition;T;	@;
[o;+;i;"{ ;"transition;	@;
[ ;#0;$[o;!;i;"{ ;"compact;	@;#0;$[o;	;i;:
space;	@;[	o;%	;i;&"property;"property;	@o;%	;i;&"duration;"duration;	@o;%	;i;&"function;"function;	@o;%	;i;&"
delay;"
delay;	@;#0;$[	[o;%;&"property;"property;	@o;%	;i};&" default_transition_property;" default-transition-property;	@[o;%;&"duration;"duration;	@o;%	;i~;&" default_transition_duration;" default-transition-duration;	@[o;%;&"function;"function;	@o;%	;i;&" default_transition_function;" default-transition-function;	@[o;%;&"
delay;"
delay;	@o;%	;i;&"default_transition_delay;"default-transition-delay;	@o;;i;"transition;T;	@;
[u; ÷[o:Sass::Script::Operation
:@operator:eq:
@linei:@operand2o:Sass::Script::String	;i:
@type:identifier:@options{ :@value"default:@operand1o:Sass::Script::Variable	;i:@underscored_name"transition_1:
@name"transition-1;@;@0[o:Sass::Tree::VariableNode;i:@guarded0:
@expro:Sass::Script::Funcall;i:@keywords{ ;"compact;@:@splat0:
@args[o:Sass::Script::List	;i:@separator:
space;@;[	o;	;i;" default_transition_property;" default-transition-property;@o;	;i;" default_transition_duration;" default-transition-duration;@o;	;i;" default_transition_function;" default-transition-function;@o;	;i;"default_transition_delay;"default-transition-delay;@;"transition-1;@:@children[ o;;i;0;o;;i;	@;F;"transitions;	@;
[ u; [o:Sass::Script::Operation
:@operator:and:
@linei:@operand2o; 
;:eq;i;	o:Sass::Script::String	;i:
@type:identifier:@options{ :@value"	list:@operand1o:Sass::Script::Funcall;i:@keywords{ :
@name"type-of;@	:@splat0:
@args[o;;i;{ ;"nth;@	;0;[o:Sass::Script::Variable	;i:@underscored_name"transition_1;"transition-1;@	o:Sass::Script::Number;i:@numerator_units[ :@original"1;@	;i:@denominator_units[ ;@	;o; 
;;
;i;	o;	;i;;;@	;"	list;o;;i;{ ;"type-of;@	;0;[o;	;i;"transition_1;"transition-1;@	;@	;@	u:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:
@linei:@guarded0:
@expro:Sass::Script::Funcall;i:@keywords{ :
@name"compact:@options{ :@splat0:
@args[o:Sass::Script::Variable	;i:@underscored_name"transition_1;"transition-1;@o;	;i;"transition_2;"transition-2;@o;	;i;"transition_3;"transition-3;@o;	;i;"transition_4;"transition-4;@o;	;i;"transition_5;"transition-5;@o;	;i;"transition_6;"transition-6;@o;	;i;"transition_7;"transition-7;@o;	;i;"transition_8;"transition-8;@o;	;i;"transition_9;"transition-9;@o;	;i;"transition_10;"transition-10;@;"transitions;@:@children[ [o:Sass::Tree::VariableNode;i:@guarded0:
@expro;;i;{ ;"	join;@	;0;[o;	;i;"transition_1;"transition-1;@	o;;i;{ ;"compact;@	;0;[o;	;i;"transition_2;"transition-2;@	o;	;i;"transition_3;"transition-3;@	o;	;i;"transition_4;"transition-4;@	o;	;i;"transition_5;"transition-5;@	o;	;i;"transition_6;"transition-6;@	o;	;i;"transition_7;"transition-7;@	o;	;i;"transition_8;"transition-8;@	o;	;i;"transition_9;"transition-9;@	o;	;i;"transition_10;"transition-10;@	o;	;i;;;@	;"
comma;"transitions;@	:@children[ o;;i;0;o;!;i;"{ ;"comma-list;	@;#0;$[ ;"delays;	@;
[ o;;i;0;o;;i;	@;F;"has-delays;	@;
[ o;;i;0;o;!;i;"{ ;"comma-list;	@;#0;$[ ;"webkit-value;	@;
[ o;;i;0;o;!;i;"{ ;"comma-list;	@;#0;$[ ;"moz-value;	@;
[ o;;i;0;o;!;i;"{ ;"comma-list;	@;#0;$[ ;"o-value;	@;
[ o;
;i ;;;	@;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;
[ o:Sass::Tree::EachNode:
@listo;%	;i¢;&"transitions;"transitions;	@;i¢;T;	@:	@var"transition;
[o;
;i£;;;	@;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;
[ o;;i¥;0;o;!;i¥;"{ ;"nth;	@;#0;$[o;%	;i¥;&"transition;"transition;	@o;;i¥;[ ;"1;	@;i;[ ;"property;	@;
[ o;;i¦;0;o;;i¦;	@;F;"duration;	@;
[ o;;i§;0;o;;i§;	@;F;"timing-function;	@;
[ o;;i¨;0;o;;i¨;	@;F;"
delay;	@;
[ u; [o:Sass::Script::Operation
:@operator:gt:
@linei©:@operand2o:Sass::Script::Number;i©:@numerator_units[ :@original"1:@options{ :@valuei:@denominator_units[ :@operand1o:Sass::Script::Funcall;i©:@keywords{ :
@name"length;@
:@splat0:
@args[o:Sass::Script::Variable	;i©:@underscored_name"transition;"transition;@
;@
0[o:Sass::Tree::VariableNode;i©:@guarded0:
@expro;;i©;{ ;"nth;@
;0;[o;	;i©;"transition;"transition;@
o;
;i©;[ ;"2;@
;i;@;"duration;@
:@children[ u; [o:Sass::Script::Operation
:@operator:gt:
@lineiª:@operand2o:Sass::Script::Number;iª:@numerator_units[ :@original"2:@options{ :@valuei:@denominator_units[ :@operand1o:Sass::Script::Funcall;iª:@keywords{ :
@name"length;@
:@splat0:
@args[o:Sass::Script::Variable	;iª:@underscored_name"transition;"transition;@
;@
0[o:Sass::Tree::VariableNode;iª:@guarded0:
@expro;;iª;{ ;"nth;@
;0;[o;	;iª;"transition;"transition;@
o;
;iª;[ ;"3;@
;i;@;"timing-function;@
:@children[ u; Y[o:Sass::Script::Operation
:@operator:gt:
@linei«:@operand2o:Sass::Script::Number;i«:@numerator_units[ :@original"3:@options{ :@valuei:@denominator_units[ :@operand1o:Sass::Script::Funcall;i«:@keywords{ :
@name"length;@
:@splat0:
@args[o:Sass::Script::Variable	;i«:@underscored_name"transition;"transition;@
;@
0[o:Sass::Tree::VariableNode;i«:@guarded0:
@expro;;i«;{ ;"nth;@
;0;[o;	;i«;"transition;"transition;@
o;
;i«;[ ;"4;@
;i	;@;"
delay;@
:@children[ o;;i«;0;o:Sass::Script::Bool;i«;@
;T;"has-delays;@
;[ o;
;i­;;;	@;[";/* If a delay is provided without a timing function */;
[ u; g[o:Sass::Script::Operation
:@operator:and:
@linei®:@operand2o:!Sass::Script::UnaryOperation	;:not;i®:@options{ :@operando:Sass::Script::Variable	;i®:@underscored_name"
delay:
@name"
delay;@:@operand1o:Sass::Script::Funcall;i®:@keywords{ ;"is-time;@:@splat0:
@args[o;	;i®;"timing_function;"timing-function;@;@0[o:Sass::Tree::VariableNode;i®:@guarded0:
@expro;	;i®;"timing_function;"timing-function;@;"
delay;@:@children[ o;;i®;0;o:Sass::Script::Bool;i®;@:@valueF;"timing-function;@;[ o;;i®;0;o;;i®;@;T;"has-delays;@;[ o;
;i°;;;	@;["9/* Keep a list of delays in case one is specified */;
[ o;;i±;0;o;!;i±;"{ ;"append;	@;#0;$[o;%	;i±;&"delays;"delays;	@o;!;i±;"{ ;"if;	@;#0;$[o;%	;i±;&"
delay;"
delay;	@o;%	;i±;&"
delay;"
delay;	@o;;i±;["s;"0s;	@;i ;[ ;"delays;	@;
[ o;;i³;0;o;!;i³;"{ ;"append;	@;#0;$[o;%	;i³;&"webkit_value;"webkit-value;	@o;!;i³;"{ ;"compact;	@;#0;$[o;	;i³;;0;	@;[o;!;i³;"{ ;"prefixed-for-transition;	@;#0;$[o;	;i³;;;	@;"-webkito;%	;i³;&"property;"property;	@o;%	;i³;&"duration;"duration;	@o;%	;i³;&"timing_function;"timing-function;	@;"webkit-value;	@;
[ o;;i´;0;o;!;i´;"{ ;"append;	@;#0;$[o;%	;i´;&"moz_value;"moz-value;	@o;!;i´;"{ ;"compact;	@;#0;$[o;	;i´;;0;	@;[	o;!;i´;"{ ;"prefixed-for-transition;	@;#0;$[o;	;i´;;;	@;"	-mozo;%	;i´;&"property;"property;	@o;%	;i´;&"duration;"duration;	@o;%	;i´;&"timing_function;"timing-function;	@o;%	;i´;&"
delay;"
delay;	@;"moz-value;	@;
[ o;;iµ;0;o;!;iµ;"{ ;"append;	@;#0;$[o;%	;iµ;&"o_value;"o-value;	@o;!;iµ;"{ ;"compact;	@;#0;$[o;	;iµ;;0;	@;[	o;!;iµ;"{ ;"prefixed-for-transition;	@;#0;$[o;	;iµ;;;	@;"-oo;%	;iµ;&"property;"property;	@o;%	;iµ;&"duration;"duration;	@o;%	;iµ;&"timing_function;"timing-function;	@o;%	;iµ;&"
delay;"
delay;	@;"o-value;	@;
[ u; Ý[o:Sass::Script::Variable	:
@linei¸:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:@prop_syntax:new;i¸;["-webkit-transition;	@	:@valueo; 	;i¸;"webkit_value;"webkit-value;	@	:
@tabsi :@children[ o:Sass::Tree::CommentNode
;i¹:
@type:silent;	@	;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:@underscored_name"has_delays:
@name"has-delays:@options{ 0[o:Sass::Tree::PropNode:@prop_syntax:new;iº;["-webkit-transition-delay;	@	:@valueo; 	;iº;"delays;"delays;	@	:
@tabsi :@children[ u; #[o:Sass::Script::Variable	:
@linei»:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:@prop_syntax:new;i»;["-moz-transition;	@	:@valueo; 	;i»;"moz_value;"moz-value;	@	:
@tabsi :@children[ u; [o:Sass::Script::Variable	:
@linei¼:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:@prop_syntax:new;i¼;["-o-transition;	@	:@valueo; 	;i¼;"o_value;"o-value;	@	:
@tabsi :@children[ o;';(;);i½;["transition;	@;o;%	;i½;&"transitions;"transitions;	@;*i ;
[ ;#0;$[[o;%;&"transition_1;"transition-1;	@o;	;i;;;	@;"default[o;%;&"transition_2;"transition-2;	@o;;i;	@;F[o;%;&"transition_3;"transition-3;	@o;;i;	@;F[o;%;&"transition_4;"transition-4;	@o;;i;	@;F[o;%;&"transition_5;"transition-5;	@o;;i;	@;F[o;%;&"transition_6;"transition-6;	@o;;i;	@;F[o;%;&"transition_7;"transition-7;	@o;;i;	@;F[o;%;&"transition_8;"transition-8;	@o;;i;	@;F[o;%;&"transition_9;"transition-9;	@o;;i;	@;F[o;%;&"transition_10;"transition-10;	@o;;i;	@;Fo;
;iÀ;;;	@;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;
[ o:Sass::Tree::FunctionNode;iÁ;"comma-list;T;	@;
[o:Sass::Tree::ReturnNode	;iÂ;o;!;iÂ;"{ ;"	join;	@;#0;$[o;	;iÂ;;0;	@;[ o;%	;iÂ;&"	list;"	list;	@o;	;iÂ;;;	@;"
comma;	@;
[ ;#0;$[[o;%;&"	list;"	list;	@o;	;iÁ;;0;	@;[ o;
;iÅ;;;	@;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;
[ o;4;iÆ;"prefixed-for-transition;T;	@;
[u; ®[o:Sass::Script::Operation
:@operator:eq:
@lineiÇ:@operand2o:Sass::Script::String	;iÇ:
@type:identifier:@options{ :@value"	list:@operand1o:Sass::Script::Funcall;iÇ:@keywords{ :
@name"type-of;@:@splat0:
@args[o:Sass::Script::Variable	;iÇ:@underscored_name"property;"property;@;@u:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@lineiÎ:@keywords{ :
@name"
index:@options{ :@splat0:
@args[o:Sass::Script::Variable	;iÎ:@underscored_name"#transitionable_prefixed_values;"#transitionable-prefixed-values;	@	o;	;iÎ;"property;"property;	@	u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	;iÑ:@underscored_name"property:
@name"property:@options{ ;@:@children[ [o:Sass::Tree::ReturnNode	;iÏ:
@expro: Sass::Script::Interpolation;iÏ:@aftero;;iÏ;0:@originally_textF:	@mido;	;iÏ;"property;"property;	@	:@whitespace_after0;	@	:@beforeo;;iÏ;0;:originally_text;o:Sass::Script::String	;iÏ:
@type:identifier;	@	:@value"-;F;	@	;0:@whitespace_before0;0;F;o;	;iÏ;"prefix;"prefix;	@	;0;	@	;0;i;	@	:@children[ [o:Sass::Tree::VariableNode;iÈ:@guarded0:
@expro;;iÈ;{ ;"comma-list;@;0;[ ;"new-list;@:@children[ o:Sass::Tree::EachNode:
@listo;	;iÉ;"property;"property;@;iÉ:@has_childrenT;@:	@var"v;[o;;iÊ;0;o;;iÊ;{ ;"append;@;0;[o;	;iÊ;"new_list;"new-list;@o;;iÊ;{ ;"prefixed-for-transition;@;0;[o;	;iÊ;"prefix;"prefix;@o;	;iÊ;"v;"v;@;"new-list;@;[ o:Sass::Tree::ReturnNode	;iÌ;o;	;iÌ;"new_list;"new-list;@;@;[ ;#0;$[[o;%;&"prefix;"prefix;	@0[o;%;&"property;"property;	@0o;
;iÖ;;;	@;["7/* Checks if the value given is a unit of time. */;
[ o;4;i×;"is-time;T;	@;
[u; [o:Sass::Script::Operation
:@operator:eq:
@lineiØ:@operand2o:Sass::Script::String	;iØ:
@type:identifier:@options{ :@value"number:@operand1o:Sass::Script::Funcall;iØ:@keywords{ :
@name"type-of;@:@splat0:
@args[o:Sass::Script::Variable	;iØ:@underscored_name"
value;"
value;@;@u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool;iÛ:@options{ :@valueF;	@	:@children[ [o:Sass::Tree::ReturnNode	;iÙ:
@expro:!Sass::Script::UnaryOperation	;:not;iÙ;@:@operando;	;;;iÙ;@;o;;iÙ;{ ;"
index;@;0;[o:Sass::Script::List	;iÙ:@separator:
space;@;[o;
	;iÙ;;;@;"so;
	;iÙ;;;@;"mso;;iÙ;{ ;"	unit;@;0;[o;	;iÙ;"
value;"
value;@;@:@children[ ;#0;$[[o;%;&"
value;"
value;	@0